#+TITLE: PHP and AJAX Cheat Sheet

> this document generated via chatgpt by openai

* What is Php

PHP (Hypertext Preprocessor) is a popular server-side scripting language that is widely used for creating dynamic and interactive websites. It is a powerful tool for building web applications and can be used to perform a wide range of tasks, including:

+ Connecting to and interacting with databases
+ Creating and managing sessions and cookies
+ Sending and receiving data from forms
+ Generating dynamic content
+ Validating user input

PHP code is typically executed on the server, and the resulting output is sent to the client in the form of HTML, CSS, and JavaScript. This allows for the creation of interactive and dynamic websites without the need for the user to refresh the page.

PHP is a flexible language that can be used with a variety of platforms, including Windows, Linux, and MacOS. It is also compatible with most web servers, including Apache and IIS.


* PHP Syntax

** Variables
+ Declare a variable: $var_name = value;
+ Concatenate strings: $string1 . $string2
+ Escape a string for use in a single-quoted string: 'string with a {$variable} inside'
+ Escape a string for use in a double-quoted string: "string with a {$variable} inside"
** Data Types
+ String: enclosed in single or double quotes
+ Integer: a whole number
+ Float: a number with a decimal point
+ Boolean: true or false
+ Array: a list of values, accessed using an index
+ Object: a data type that represents a structure
+ NULL: represents a variable with no value
** Comments
*** Single-Line Comment

#+BEGIN_SRC php
// This is a single-line comment
#+END_SRC

*** Multi-Line Comment

#+BEGIN_SRC php
/*
This is a
multi-line comment
*/
#+END_SRC

*** Documenting Functions

#+BEGIN_SRC php
/**
    This is a function documentation block.
    @param string $arg1 Description of argument.
    @param int $arg2 Description of argument.
    @return bool Description of return value.
    */
    function function_name($arg1, $arg2) {
    // code to execute
    return value;
    }
    #+END_SRC

* PHP Echo and Print Statements Cheat Sheet

** Echo

#+BEGIN_SRC php
echo "Hello, World!";
echo $variable;
echo "This is a string", $variable;
#+END_SRC

** Print

#+BEGIN_SRC php
print "Hello, World!";
print $variable;
#+END_SRC

 *Note that the echo and print statements are similar, but echo is generally faster and can take multiple arguments (separated by commas).*

* Data Types

** Strings

*** Declaring a String

#+BEGIN_SRC php
$string1 = "This is a string";
$string2 = 'This is also a string';
#+END_SRC

*** Concatenation

#+BEGIN_SRC php
$string1 = "Hello";
$string2 = "World";
$string3 = $string1 . " " . $string2; // "Hello World"
#+END_SRC

*** Escape Sequences

| Sequence | Description     |
| \n       | New Line        |
| \r       | Carriage Return |
| \t       | Tab             |
| \v       | Vertical Tab    |
| \e       | Escape          |
| \f       | Form Feed       |

*** String Functions
**** strlen()

#+BEGIN_SRC php
echo strlen("Hello, World!"); // 13
#+END_SRC

**** strrev()

#+BEGIN_SRC php
echo strrev("Hello, World!"); // "!dlroW ,olleH"
#+END_SRC

**** strpos()

#+BEGIN_SRC php
echo strpos("Hello, World!", "World"); // 7
#+END_SRC

**** str_replace()

#+BEGIN_SRC php
echo str_replace("World", "Universe", "Hello, World!"); // "Hello, Universe!"
#+END_SRC

**** substr()

#+BEGIN_SRC php
echo substr("Hello, World!", 7); // "World!"
#+END_SRC

** Numbers

*** Integer

#+BEGIN_SRC php
$int1 = 123;
$int2 = -456;
#+END_SRC

*** Float

#+BEGIN_SRC php
$float1 = 3.14;
$float2 = -2.71828;
#+END_SRC

*** Mathematical Operators

| Operator | Description    |
|----------+----------------|
| +        | Addition       |
| *        | Multiplication |
| /        | Division       |
| %        | Modulus        |
| **       | Exponentiation |

*** Comparison Operators

| Operator | Description              |
| ==       | Equal to                 |
| !=       | Not equal to             |
| >        | Greater than             |
| <        | Less than                |
| >=       | Greater than or equal to |
| <=       | Less than or equal to    |

*** Number Functions
**** abs()

#+BEGIN_SRC php
echo abs(-123); // 123
#+END_SRC

**** round()

#+BEGIN_SRC php
echo round(3.14); // 3
#+END_SRC

**** ceil()

#+BEGIN_SRC php
echo ceil(3.14); // 4
#+END_SRC

**** floor()

#+BEGIN_SRC php
echo floor(3.14); // 3
#+END_SRC

**** mt_rand()

#+BEGIN_SRC php
echo mt_rand(); // random integer between 0 and mt_getrandmax()
#+END_SRC

* Control Structures
** If-Else

#+BEGIN_SRC php
if (condition) {
// code to execute if condition is true
} else {
// code to execute if condition is false
}
#+END_SRC

** Switch

#+BEGIN_SRC php
switch (expression) {
case value1:
// code to execute if expression equals value1
break;
case value2:
// code to execute if expression equals value2
break;
default:
// code to execute if expression does not equal any of the values
}
#+END_SRC

* Loops
** For Loop

#+BEGIN_SRC php
for ($i = 0; $i < count($array); $i++) {
// code to execute for each value in the array
}
#+END_SRC

** While Loop

#+BEGIN_SRC php
while (condition) {
// code to execute while condition is true
}
#+END_SRC

** Do-While Loop

#+BEGIN_SRC php
do {
// code to execute
} while (condition);
#+END_SRC

* Functions
** Defining a Function

#+BEGIN_SRC php
function function_name($arguments) {
// code to execute
return value;
}
#+END_SRC
** Calling a Function

#+BEGIN_SRC php
$result = function_name($arguments);
#+END_SRC

* Arrays
** Creating an Array

#+BEGIN_SRC php
$array = array(value1, value2, value3);
#+END_SRC

** Accessing an Array Value

#+BEGIN_SRC php
echo $array[0]; // outputs value1
#+END_SRC

** Modifying an Array Value

#+BEGIN_SRC php
$array[0] = new_value;
#+END_SRC

** Adding to an Array

#+BEGIN_SRC php
array_push($array, value);
#+END_SRC

** Removing from an Array

#+BEGIN_SRC php
unset($array[index]);
#+END_SRC

* Objects
** Defining a Class

#+BEGIN_SRC php
class ClassName {
// properties and methods go here
}
#+END_SRC

** Creating an Object

#+BEGIN_SRC php
$object = new ClassName();
#+END_SRC

** Accessing an Object Property or Method

#+BEGIN_SRC php
echo $object->property;
echo $object->method();
#+END_SRC

* Databases
** Connecting to a MySQL Database

#+BEGIN_SRC php
$host = "hostname";
$user = "username";
$pass = "password";
$db = "database_name";

$conn = mysqli_connect($host, $user, $pass, $db);

if (!$conn) {
die("Connection failed: " . mysqli_connect_error());
}
#+END_SRC

** Performing a MySQL Query

#+BEGIN_SRC php
$query = "SELECT * FROM table_name";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
// output data of each row
while($row = mysqli_fetch_assoc($result)) {
echo "id: " . $row["id"]. " - Name: " . $row["name"]. "<br>";
}
} else {
echo "0 results";
}
#+END_SRC

** Closing a MySQL Connection

#+BEGIN_SRC php
mysqli_close($conn);
#+END_SRC

* Sessions
** Starting a Session

#+BEGIN_SRC php
session_start();
#+END_SRC

** Storing a Value in a Session

#+BEGIN_SRC php
$_SESSION["key"] = value;
#+END_SRC

** Retrieving a Value from a Session

#+BEGIN_SRC php
$value = $_SESSION["key"];
#+END_SRC

** Destroying a Session

#+BEGIN_SRC php
session_destroy();
#+END_SRC

* Cookies
** Setting a Cookie

#+BEGIN_SRC php
setcookie("key", "value", time() + 3600); // expires in 1 hour
#+END_SRC

** Retrieving a Cookie Value

#+BEGIN_SRC php
$value = $_COOKIE["key"];
#+END_SRC

** Deleting a Cookie

#+BEGIN_SRC php
setcookie("key", "", time() - 3600); // expires in the past
#+END_SRC
* AJAX

** Sending an AJAX Request

#+BEGIN_SRC javascript
$.ajax({
url: "url",
type: "POST",
data: {key: value},
success: function(response) {
// code to execute on success
},
error: function(xhr, status, error) {
// code to execute on error
}
});
#+END_SRC

** Processing an AJAX Request in PHP

#+BEGIN_SRC php
if (isset($_POST["key"])) {
$value = $_POST["key"];
// code to process value
echo response;
}
#+END_SRC
